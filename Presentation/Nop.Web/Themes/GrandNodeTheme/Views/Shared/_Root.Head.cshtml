@using Nop.Core.Domain;
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo
@using Nop.Core.Infrastructure;
@using Nop.Services.Security;
@using System.Text;

@{
    //var displayMiniProfiler = EngineContext.Current.Resolve<Nop.Core.Domain.StoreInformationSettings>().DisplayMiniProfilerInPublicStore;
    var storeSettings = EngineContext.Current.Resolve<StoreInformationSettings>();
    var permissionService = EngineContext.Current.Resolve<IPermissionService>();
    var displayMiniProfiler = storeSettings.DisplayMiniProfilerInPublicStore
        && (!storeSettings.DisplayMiniProfilerForAdminOnly || permissionService.Authorize(StandardPermissionProvider.AccessAdminPanel));

    var settings = EngineContext.Current.Resolve<Nop4you.Plugin.Widgets.ThemeGrandNode.ThemeGrandNodeSettings>();

    Html.AppendScriptParts("~/Themes/GrandNodeTheme/Content/js/materializeInit.js");
    Html.AppendScriptParts("~/Scripts/public.ajaxcart.js");
    Html.AppendScriptParts("~/Scripts/public.common.js");
    Html.AppendScriptParts("~/Scripts/jquery-migrate-1.2.1.min.js");
    Html.AppendScriptParts("~/Scripts/jquery-ui-1.10.3.custom.min.js");
    Html.AppendScriptParts("~/Scripts/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts("~/Scripts/jquery.validate.min.js");
    Html.AppendScriptParts("~/Scripts/jquery-1.10.2.min.js");

    Html.AddScriptParts("~/Themes/GrandNodeTheme/Content/js/materialize.min.js");

    //X-UA-Compatible tag
    var commonSettings = EngineContext.Current.Resolve<CommonSettings>();
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts(string.Format("<meta http-equiv=\"X-UA-Compatible\" content=\"{0}\"/>", commonSettings.XuaCompatibleValue));
    }
    //custom tag(s)
    var seoSettings = EngineContext.Current.Resolve<SeoSettings>();
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var metaAddInfo = new StringBuilder();

    metaAddInfo.AppendFormat("<meta name=\"generator-version\" content=\"{0}\" >", settings.version);
    //var metaVersion = "<meta name=\"generator-version\" content=\"settings.version\" >";
    //string metaVer = metaVersion.Replace("settings.version", @settings.version);
    //Html.AppendHeadCustomParts(metaVer.ToString());
    Html.AppendHeadCustomParts(metaAddInfo.ToString());

}
<!DOCTYPE html>
<html@(this.ShouldUseRtlTheme() ? Html.Raw(" dir=\"rtl\"") : null) @Html.NopPageCssClasses()>
    <head>
        <title>@Html.NopTitle()</title>
        <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
        <meta name="description" content="@(Html.NopMetaDescription())" />
        <meta name="keywords" content="@(Html.NopMetaKeywords())" />
        <meta name="generator" content="grandnode" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        @Html.NopHeadCustom()
        @*This is used so that themes can inject content into the header*@
        @Html.Partial("Head")
        @Html.Widget("head_html_tag")
        @Html.NopCssFiles(this.Url, ResourceLocation.Head)
        @Html.NopScripts(this.Url, ResourceLocation.Head)
        @Html.NopCanonicalUrls()
        @Html.Action("RssHeaderLink", "News")
        @Html.Action("RssHeaderLink", "Blog")
        @*Favicon - upload favicon.ico file to the root directory*@
        @Html.Action("Favicon", "Common")
        @if (displayMiniProfiler)
        {
            @StackExchange.Profiling.MiniProfiler.RenderIncludes()
        }
    </head>
    <body>
        @RenderBody()
        @Html.NopCssFiles(this.Url, ResourceLocation.Foot)
        @Html.NopScripts(this.Url, ResourceLocation.Foot)

        <script type="text/javascript">
            $(document).ready(function () {
                $('select').material_select();
            });
        </script>
    </body>
    </html>
